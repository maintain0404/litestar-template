[tool.poetry]
name = "litestar-template"
version = "0.1.0"
description = ""
authors = ["Taein Min <maintain0404@gmail.com>"]
readme = "README.md"
packages = [{ include = "app" }]

# Dependencies
[tool.poetry.dependencies]
python = "^3.12"
typing-extensions = "^4.11.0"
litestar = { extras = ["cli", "sqlalchemy"], version = "^2.8.3" }
pydantic = "^2.7.1"
pydantic-settings = "^2.2.1"
sqlalchemy = { version = "^2.0.30", extras = ["aiosqlite"] }


[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
black = "^22.12.0"
ruff = "^0.3.7"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest = "^7.4.4"
pytest-asyncio = "^0.23.6"
async-asgi-testclient = "^1.4.11"

[tool.ruff]
src = ['app', 'tests']

[tool.ruff.lint]
select = ['E', 'F', 'I', 'UP']

[tool.ruff.lint.per-file-ignores]
# Ignore `E402` (import violations) in all `__init__.py` files, and in `path/to/file.py`.
"__init__.py" = ["F401", 'E402']
"app/core/*.py" = ['E402']

[tool.ruff.lint.isort] # rule I
extra-standard-library = ["typing_extensions"]
required-imports = ["from __future__ import annotations"]
known-local-folder = ['app']

[tool.ruff.lint.pydocstyle] # rule D
convention = 'google'

# Test
[tool.pytest.ini_options]
pythonpath = ["./", "./app"]
testpaths = ['./tests']
asyncio_mode = 'auto'

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
